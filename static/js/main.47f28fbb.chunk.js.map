{"version":3,"sources":["Components/SeasonDisplay.js","Components/Loader.js","Components/app.js","index.js"],"names":["SeasonDisplay","props","lat","month","season","Date","getMonth","text","iconName","className","Loader","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","Position","setState","coords","latitude","err","message","this","renderComp","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gOAuBeA,MAdf,SAAuBC,GAEnB,IATaC,EAAIC,EASXC,GATOF,EASUD,EAAMC,KATZC,GASgB,IAAIE,MAAOC,YARvC,GAAGH,EAAM,EACND,EAAI,EAAI,SAAU,SAElBA,EAAI,EAAI,SAAU,UAMpBK,EAAe,WAATH,EAAmB,mBAAmB,eAC5CI,EAAmB,WAATJ,EAAmB,YAAY,MAC/C,OACI,yBAAKK,UAAS,UAAKL,IAChB,uBAAGK,UAAS,4BAAuBD,EAAvB,WACZ,wBAAIC,UAAS,UAAKL,IAAWG,GAC7B,uBAAGE,UAAS,6BAAwBD,EAAxB,aCRRE,MARf,WACI,OACI,yBAAKD,UAAU,oBACX,yBAAKA,UAAU,sBAAf,gBC2BGE,E,4MA3BZC,MAAM,CAAEV,IAAM,KAAMW,aAAe,I,kEAEf,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAG,EAAKC,SAAS,CAAEjB,IAAMgB,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAE,EAAKH,SAAS,CAACN,aAAeS,EAAIC,e,mCAIxC,OACDC,KAAKZ,MAAMV,KAAQsB,KAAKZ,MAAMC,aAE3B,6BACEW,KAAKZ,MAAMV,MAAQsB,KAAKZ,MAAMC,aAChC,kBAAC,EAAD,CAAeX,IAAKsB,KAAKZ,MAAMV,MAC9B,0CAAgBsB,KAAKZ,MAAMC,eAJ5B,6BAAK,kBAAC,EAAD,S,+BAUN,OAAO,6BACJW,KAAKC,kB,GAvBEC,IAAMC,W,MCCxBC,IAASC,OACP,6BACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.47f28fbb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css';\r\nconst getSeason=(lat,month)=>{\r\nif(month>2&&month<9){\r\n    return (lat>0)? \"Summer\": \"Winter\"\r\n}else{\r\n    return (lat>0)? \"Winter\": \"Summer\"\r\n}\r\n}\r\nfunction SeasonDisplay(props) {\r\n    \r\n    const season=getSeason(props.lat,new Date().getMonth())\r\n    const text=(season===\"Winter\")?\"Burr! Its Chilly\":\"Its Damn Hot\"\r\n    const iconName=(season===\"Winter\")?\"snowflake\":\"sun\"\r\n    return (\r\n        <div className={`${season}`}>\r\n           <i className={`icon-left massive ${iconName} icon`}/>\r\n           <h1 className={`${season}`}>{text}</h1>\r\n           <i className={`icon-right massive ${iconName} icon`}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeasonDisplay\r\n","import React from 'react'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react';\r\nimport \"./app.css\"\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Loader from \"./Loader\";\r\nclass App extends React.Component{\r\n   state={ lat : null, errorMessage : '' }\r\n   \r\n   componentDidMount(){\r\n    window.navigator.geolocation.getCurrentPosition(\r\n        Position=> this.setState({ lat : Position.coords.latitude}),\r\n        err=>this.setState({errorMessage : err.message})\r\n        );\r\n   }\r\n   renderComp(){\r\n       return(\r\n    (!this.state.lat && !this.state.errorMessage)\r\n        ?<div><Loader/></div>\r\n        :<div> \r\n        { (this.state.lat && !this.state.errorMessage)\r\n        ?<SeasonDisplay lat={this.state.lat}/>\r\n        : <div>Message : {this.state.errorMessage}</div>}\r\n        </div>\r\n       )\r\n   }\r\n  \r\n    render (){\r\n        return(<div>\r\n          {this.renderComp()}\r\n          </div>);\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/app.js';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <div>\n    <App/>\n  </div>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}